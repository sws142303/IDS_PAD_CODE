/**
 * @file MtcUri.java
 * @brief MtcUri interface
 */
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.juphoon.lemon;

/**
 * @brief MtcUri interface
 */
public class MtcUri implements MtcUriConstants {
/**
 * @brief Check URI is valid.
 *
 * @param [in] pcUri The URI string.
 *
 * @return true if URI is valid SIP URI or TEL URI, otherwise false.
 */
  public static boolean Mtc_UriIsValid(String pcUri) {
    return MtcUriJNI.Mtc_UriIsValid(pcUri);
  }

/**
 * @brief Format early URI to a valid URI.
 *
 * @param [in] pcEarlyUri The early URI, it can be phone number, sip URI or tel URI.
 * @param [in] pcRealm The SIP server realm.
 * @param [in] bUserPhone The option of add user=phone parameter.
 *
 * @return The format result otherwise return ZNULL
 *    The caller must copy it parameter, then use.
 */
  public static String Mtc_UriFormat(String pcEarlyUri, String pcRealm, boolean bUserPhone) {
    return MtcUriJNI.Mtc_UriFormat(pcEarlyUri, pcRealm, bUserPhone);
  }

/**
 * @brief Format early URI to a valid URI.
 * It will automatically fill realm by @ref MtcCliDb::Mtc_CliDbGetSipRegRealm.
 *
 * @param [in] pcEarlyUri The early URI, it can be phone number, sip URI or tel URI.
 * @param [in] bUserPhone The option of add user=phone paramter.
 *
 * @return The format result otherwise return ZNULL
 *    The caller must copy it parameter, then use.
 */
  public static String Mtc_UriFormatX(String pcEarlyUri, boolean bUserPhone) {
    return MtcUriJNI.Mtc_UriFormatX(pcEarlyUri, bUserPhone);
  }

/**
 * @brief Format a TEL URI from phone.
 *
 * @param [in] pcPhone The phone number.
 *
 * @return The TEL URI string otherwise return ZNULL.
 *   The caller must copy it, then use.
 */
  public static String Mtc_UriFormatTelUri(String pcPhone) {
    return MtcUriJNI.Mtc_UriFormatTelUri(pcPhone);
  }

/**
 * @brief Format a national URI from phone.
 *
 * @param [in] pcPhone The phone number.
 *
 * @return The TEL URI string otherwise return ZNULL.
 *   The caller must copy it, then use.
 */
  public static String Mtc_UriFormatNat(String pcPhone) {
    return MtcUriJNI.Mtc_UriFormatNat(pcPhone);
  }

/**
 * @brief Format a international URI from phone.
 *
 * @param [in] pcPhone The phone number.
 *
 * @return The TEL URI string otherwise return ZNULL.
 *   The caller must copy it, then use.
 */
  public static String Mtc_UriFormatInt(String pcPhone) {
    return MtcUriJNI.Mtc_UriFormatInt(pcPhone);
  }

/**
 * @brief Get user part from SIP or TEL URI.
 *
 * @param [in] pcUri The SIP or TEL URI string.
 * @param [in] dwLen The user part name buffer length.
 *
 * @return The user part name string otherwise return ZNUL.
 *   The caller must copy it, then use.
 */
  public static String Mtc_UriGetName(String pcUri, int dwLen) {
    return MtcUriJNI.Mtc_UriGetName(pcUri, dwLen);
  }

/**
 * @brief Get user part(ex: phone number) of URI(SIP or TEL URI).
 *
 * @param [in] pcUri The URI string.
 *
 * @return The user part string otherwise return ZNULL.
 *   The caller must copy it, then use.
 */
  public static String Mtc_UriGetUserPart(String pcUri) {
    return MtcUriJNI.Mtc_UriGetUserPart(pcUri);
  }

/**
 * @brief Get user part(ex: phone number) of URI(SIP or TEL URI).
 *
 * @param [in] pcUri The URI string otherwise return ZNULL.
 *
 * @return The host port string.
 *   The caller must copy it, then use.
 */
  public static String Mtc_UriGetHostPart(String pcUri) {
    return MtcUriJNI.Mtc_UriGetHostPart(pcUri);
  }

}
