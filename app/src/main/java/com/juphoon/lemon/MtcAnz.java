/**
 * @file MtcAnz.java
 * @brief MtcAnz interface
 */
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.juphoon.lemon;

/**
 * @brief MtcAnz interface
 */
public class MtcAnz implements MtcAnzConstants {
/**
 * @brief Open a udp port to receive data stream.
 *
 * @param [in] pcIpAddr Local ip address.
 * @param [in] iUdpPort Udp port to receive a data stream.
 *
 * @return The id of this new created data stream on succeed, otherwise return ZMAXULONG.
 *
 * @see MtcAnz::Mtc_AnzDataPortClose
 */
  public static int Mtc_AnzDataPortOpen(String pcIpAddr, int iUdpPort) {
    return MtcAnzJNI.Mtc_AnzDataPortOpen(pcIpAddr, iUdpPort);
  }

/**
 * @brief Close the data stream udp port.
 *
 * @param [in] dwTptId The id of this data stream.
 *
 * @retval ZOK Close udp port successfully.
 * @retval ZFAILED Close udp port failed.
 *
 * @see MtcAnz::Mtc_AnzDataPortOpen
 */
  public static  int Mtc_AnzDataPortClose(int dwTptId) {
    return MtcAnzJNI.Mtc_AnzDataPortClose(dwTptId);
  }

/**
 * @brief Open a udp port to receive media stream.
 *
 * @param [in] pcIpAddr Local ip addressT.
 * @param [in] iUdpPort Udp port to receive a media stream.
 *
 * @return The id of this new created video stream on succeed, otherwise return ZMAXULONG.
 *
 * @see MtcAnz::Mtc_AnzMediaPortClose
 */
  public static int Mtc_AnzMediaPortOpen(String pcIpAddr, int iUdpPort) {
    return MtcAnzJNI.Mtc_AnzMediaPortOpen(pcIpAddr, iUdpPort);
  }

/**
 * @brief Close the Media stream udp port.
 *
 * @param [in] dwStrmId The id of media stream.
 *
 * @retval ZOK Close udp port successfully.
 * @retval ZFAILED Close udp port failed.
 *
 * @see MtcAnz::Mtc_AnzMediaPortOpen
 */
  public static int Mtc_AnzMediaPortClose(int dwStrmId) {
    return MtcAnzJNI.Mtc_AnzMediaPortClose(dwStrmId);
  }

/**
 * @brief Start to receive media stream.
 *
 * @param [in] dwStrmId The id of media stream.
 * @param [in] iPayloadType Payload type of media stream.
 * @param [in] dwHandle The handle of window in which show remote image.
 *
 * @retval ZOK On success.
 * @retval ZFAILED On failed.
 *
 * @see MtcAnz::Mtc_AnzMediaStop
 */
  public static int Mtc_AnzMediaStart(int dwStrmId, int iPayloadType, Object dwHandle) {
    return MtcAnzJNI.Mtc_AnzMediaStart(dwStrmId, iPayloadType, dwHandle);
  }

/**
* @brief Start to receive media stream.
*
* @param [in] dwStrmId The id of media stream.
*
* @retval ZOK On success.
* @retval ZFAILED On failed.
*
* @see MtcAnz::Mtc_AnzMediaStart
*/
  public static int Mtc_AnzMediaStop(int dwStrmId) {
    return MtcAnzJNI.Mtc_AnzMediaStop(dwStrmId);
  }

}
