/**
 * @file MtcCallConstants.java
 * @brief MtcCallConstants constants
 */
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.juphoon.lemon;

/**
 * @brief MtcCallConstants constants
 */
public interface MtcCallConstants {
  public final static int INVALIDID = -1; /**< @brief invalid id */
  public final static int ZOK = 0; /**< @brief ok */
  public final static int ZFAILED = 1; /**< @brief failed */
  public final static int MTC_EBASE_CP = 0xE000; /**< @brief CP error base */
  public final static int MTC_EBASE_REG = 0xE100; /**< @brief REG error base */
  public final static int MTC_EBASE_CALL = 0xE200; /**< @brief CALL error base */
  public final static int MTC_EBASE_VSHARE = 0xE300; /**< @brief VSHARE error base */
  public final static int MTC_EBASE_CAP = 0xE400; /**< @brief CAP error base */
  public final static int MTC_EBASE_BUDDY = 0xE500; /**< @brief BUDDY error base */
  public final static int MTC_EBASE_GRP = 0xE600; /**< @brief GRP error base */
  public final static int MTC_EBASE_CONF = 0xE700; /**< @brief CONF error base */
  public final static int MTC_EBASE_GS = 0xE800; /**< @brief GS error base */
  public final static int MTC_EBASE_PRES = 0xE900; /**< @brief PRES error base */
  public final static int MTC_EBASE_IM = 0xEA00; /**< @brief IM error base */
  public final static int MTC_EBASE_CONTACT = 0xEB00; /**< @brief CONTACT error base */
  public final static int MTC_EBASE_LOG = 0xEC00; /**< @brief LOG error base */
  public final static int MTC_EBASE_LCS = 0xED00; /**< @brief LCS error base */
  public final static String MTC_CALL_REC_FILE_PCM = "pcm"; /**< @brief pcm content */
  public final static String MTC_CALL_REC_FILE_WAV = "wav"; /**< @brief wav content */
  public final static int MTC_CALL_ERR_NO = (0xE200+0); /**< @brief no error. */
  public final static int MTC_CALL_ERR_AUTH_FAILED = (0xE200+1); /**< @brief authentication failed, invalid user or password. */
  public final static int MTC_CALL_ERR_SESS_TMR = (0xE200+2); /**< @brief call refresh error. */
  public final static int MTC_CALL_ERR_FORBIDDEN = (0xE200+3); /**< @brief call forbidden. */
  public final static int MTC_CALL_ERR_NOT_FOUND = (0xE200+4); /**< @brief call participant not found. */
  public final static int MTC_CALL_ERR_NOT_ACPTED = (0xE200+5); /**< @brief call not accepted. */
  public final static int MTC_CALL_ERR_TEMP_UNAVAIL = (0xE200+6); /**< @brief call participant temp unavailable. */
  public final static int MTC_CALL_ERR_REQ_TERMED = (0xE200+7); /**< @brief call request terminated. */
  public final static int MTC_CALL_ERR_INTERNAL_ERR = (0xE200+8); /**< @brief server internal error. */
  public final static int MTC_CALL_ERR_SRV_UNAVAIL = (0xE200+9); /**< @brief service unavailable. */
  public final static int MTC_CALL_ERR_NOT_EXIST = (0xE200+10); /**< @brief not exist. */
  public final static int MTC_CALL_ERR_USER_NOTREG = (0xE200+11); /**< @brief call participant not Registered. */
  public final static int MTC_CALL_TERM_BYE = (0xE200+21); /**< @brief Terminated by bye. */
  public final static int MTC_CALL_TERM_CANCEL = (0xE200+22); /**< @brief Terminated by cancel. */
  public final static int MTC_CALL_TERM_TIMEOUT = (0xE200+23); /**< @brief Terminated by timeout. */
  public final static int MTC_CALL_TERM_BUSY = (0xE200+24); /**< @brief Terminated by busy. */
  public final static int MTC_CALL_TERM_DECLINE = (0xE200+25); /**< @brief Terminated by decline. */
  public final static int MTC_CALL_TERM_TRSFED = (0xE200+26); /**< @brief Terminated by transfered. */
  public final static int MTC_CALL_TERM_REDIRECT = (0xE200+27); /**< @brief Terminated by redirect. */
  public final static int MTC_CALL_TERM_REPLACE = (0xE200+28); /**< @brief Terminated by replace. */
  public final static int MTC_CALL_ALERT_RING = (0xE200+41); /**< @brief Alerted by 180. */
  public final static int MTC_CALL_ALERT_QUEUED = (0xE200+42); /**< @brief Alerted by 182. */
  public final static int MTC_CALL_ALERT_PROGRESS = (0xE200+43); /**< @brief Alerted by 183. */
  public final static int MTC_CALL_ERR_OTHER = (0xE200+200); /**< @brief other error. */
  // EN_MTC_CALL_DTMF_TYPE 
  public final static int EN_MTC_CALL_DTMF_0 = 0; /**< @brief DTMF signal 0 */
  public final static int EN_MTC_CALL_DTMF_1 = EN_MTC_CALL_DTMF_0 + 1; /**< @brief DTMF signal 1 */
  public final static int EN_MTC_CALL_DTMF_2 = EN_MTC_CALL_DTMF_1 + 1; /**< @brief DTMF signal 2 */
  public final static int EN_MTC_CALL_DTMF_3 = EN_MTC_CALL_DTMF_2 + 1; /**< @brief DTMF signal 3 */
  public final static int EN_MTC_CALL_DTMF_4 = EN_MTC_CALL_DTMF_3 + 1; /**< @brief DTMF signal 4 */
  public final static int EN_MTC_CALL_DTMF_5 = EN_MTC_CALL_DTMF_4 + 1; /**< @brief DTMF signal 5 */
  public final static int EN_MTC_CALL_DTMF_6 = EN_MTC_CALL_DTMF_5 + 1; /**< @brief DTMF signal 6 */
  public final static int EN_MTC_CALL_DTMF_7 = EN_MTC_CALL_DTMF_6 + 1; /**< @brief DTMF signal 7 */
  public final static int EN_MTC_CALL_DTMF_8 = EN_MTC_CALL_DTMF_7 + 1; /**< @brief DTMF signal 8 */
  public final static int EN_MTC_CALL_DTMF_9 = EN_MTC_CALL_DTMF_8 + 1; /**< @brief DTMF signal 9 */
  public final static int EN_MTC_CALL_DTMF_STAR = EN_MTC_CALL_DTMF_9 + 1; /**< @brief DTMF signal * */
  public final static int EN_MTC_CALL_DTMF_POUND = EN_MTC_CALL_DTMF_STAR + 1; /**< @brief DTMF signal # */
  public final static int EN_MTC_CALL_DTMF_A = EN_MTC_CALL_DTMF_POUND + 1; /**< @brief DTMF signal A */
  public final static int EN_MTC_CALL_DTMF_B = EN_MTC_CALL_DTMF_A + 1; /**< @brief DTMF signal B */
  public final static int EN_MTC_CALL_DTMF_C = EN_MTC_CALL_DTMF_B + 1; /**< @brief DTMF signal C */
  public final static int EN_MTC_CALL_DTMF_D = EN_MTC_CALL_DTMF_C + 1; /**< @brief DTMF signal D */

  // EN_MTC_CALL_ALERT_INFO_TYPE 
  public final static int EN_MTC_CALL_ALERT_INFO_NULL = 0; /**< @brief no alert info */
  public final static int EN_MTC_CALL_ALERT_INFO_DR0 = EN_MTC_CALL_ALERT_INFO_NULL + 1; /**< @brief bellcore_dr0 */
  public final static int EN_MTC_CALL_ALERT_INFO_DR1 = EN_MTC_CALL_ALERT_INFO_DR0 + 1; /**< @brief bellcore_dr1 */
  public final static int EN_MTC_CALL_ALERT_INFO_DR2 = EN_MTC_CALL_ALERT_INFO_DR1 + 1; /**< @brief bellcore_dr2 */
  public final static int EN_MTC_CALL_ALERT_INFO_DR3 = EN_MTC_CALL_ALERT_INFO_DR2 + 1; /**< @brief bellcore_dr3 */
  public final static int EN_MTC_CALL_ALERT_INFO_DR4 = EN_MTC_CALL_ALERT_INFO_DR3 + 1; /**< @brief bellcore_dr4 */
  public final static int EN_MTC_CALL_ALERT_INFO_DR5 = EN_MTC_CALL_ALERT_INFO_DR4 + 1; /**< @brief bellcore_dr5 */

  // EN_MTC_CALL_EM_STATUS_TYPE 
  public final static int EN_MTC_CALL_EM_STATUS_INACTIVE = 0; /**< @brief inactive */
  public final static int EN_MTC_CALL_EM_STATUS_SENDONLY = EN_MTC_CALL_EM_STATUS_INACTIVE + 1; /**< @brief sendonly */
  public final static int EN_MTC_CALL_EM_STATUS_RECVONLY = EN_MTC_CALL_EM_STATUS_SENDONLY + 1; /**< @brief recvonly */
  public final static int EN_MTC_CALL_EM_STATUS_SENDRECV = EN_MTC_CALL_EM_STATUS_RECVONLY + 1; /**< @brief sendrecv */

  // EN_MTC_CALL_TERM_REASON_TYPE 
  public final static int EN_MTC_CALL_TERM_REASON_NORMAL = 0; /**< @brief normal session term, bye or cancel */
  public final static int EN_MTC_CALL_TERM_REASON_BUSY = EN_MTC_CALL_TERM_REASON_NORMAL + 1; /**< @brief the session is rejected */
  public final static int EN_MTC_CALL_TERM_REASON_DECLINE = EN_MTC_CALL_TERM_REASON_BUSY + 1; /**< @brief decline the session */
  public final static int EN_MTC_CALL_TERM_REASON_NOT_AVAILABLE = EN_MTC_CALL_TERM_REASON_DECLINE + 1; /**< @brief the user is not available */

  // EN_MTC_CALL_REC_MODE_TYPE 
  public final static int EN_MTC_CALL_REC_MODE_ALL = 0; /**< @brief record all data */
  public final static int EN_MTC_CALL_REC_MODE_PLAY = EN_MTC_CALL_REC_MODE_ALL + 1; /**< @brief record palying data */
  public final static int EN_MTC_CALL_REC_MODE_MIC = EN_MTC_CALL_REC_MODE_PLAY + 1; /**< @brief record microphone data */

}
